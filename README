# Follow this instruction before we run e commerce app
1. Configure username and password in config.json
2. Create virtual environment and activate it
3. Install requirements.txt (Compatible with python3.9)
    pip install -r requirements.txt
4. Run mysql (pre requisite)
6. Run app.py
7. Server will run on 127.0.0.1:5000
8. All API calls and operations are logged in app.log with appropriate messages for debugging and tracking.
9. Usage of APIs
    1) Get All Products
        URL: /products
        Method: GET
        Query Parameters:
            limit (optional, default: 10): Maximum number of products to return.
            skip (optional, default: 0): Number of products to skip for pagination.
        Response
            Status Code: 200 OK
            Content:
                [
                    {
                        "id": 1,
                        "title": "Product 1",
                        "description": "Description for product 1",
                        "price": 100.00
                    },
                ]

    2) Get a Single Product
        URL: /products/<id>
        Method: GET
        URL Parameters:
            id (required): The ID of the product to retrieve.
        Response
            Status Code:
                200 OK: Product found.
            Content:
                {
                    "id": 1,
                    "title": "Product 1",
                    "description": "Description for product 1",
                    "price": 100.00
                }
        Error Responses
            Status Code:
                404 Not Found: Product not found.
            Content:
                {
                    "error": "Product not found"
                }

    3) Create a New Product
        URL: /products
        Method: POST
        Request Body (JSON):
            {
                "title": "New Product Title",
                "description": "Product description",
                "price": 150.00
            }
        Note: Title must be unique. If a product with the same title exists, an error will be returned.
        Response
            Status Code:
                201 Created: Product created successfully.
            Content:
                {
                    "id": 2,
                    "title": "New Product Title",
                    "description": "Product description",
                    "price": 150.00
                }
        
        Error Responses
            Status Code:
                400 Bad Request: Invalid input or product with the same title exists.
            Content: 
                {
                    "error": "Product with this title already exists."
                }

    4) Update an Existing Product
        URL: /products/<id>
        Method: PUT
        URL Parameters:
            id (required): The ID of the product to update.
        Request Body (JSON):
            {
                "title": "Updated Product Title",
                "description": "Updated description",
                "price": 200.00
            }

        Response
            Status Code:
                404 Not Found: Product not found.
                400 Bad Request: Invalid input.
            Content:
                {
                    "id": 1,
                    "title": "Updated Product Title",
                    "description": "Updated description",
                    "price": 200.00
                }

        Error Responses
            Status Code:
                404 Not Found: Product not found.
            Content:
                {
                    "error": "Product not found"
                }

            Status Code:
                400 Bad Request: Invalid input.
            Content:
                {
                    "error": "Invalid input"
                }

    5) Delete a Product
        URL: /products/<id>
        Method: DELETE
        URL Parameters:
            id (required): The ID of the product to delete.
        Response
            Status Code:
                200 OK: Product deleted successfully.
            Content:
                {
                    "message": "Product deleted successfully"
                }
        Error Responses
            Status Code:
                404 Not Found: Product not found.
            Content:
                {
                    "error": "Product not found"
                }


    Below are general error responses.
    1) 500 Internal Server Error:
        Content:
            {
                "error": "Internal server error"
            }
        This may occur due to database-related issues.
    2) 500 Internal Server Error:

        Content:
            {
                "error": "An unexpected error occurred"
            }
        This may occur due to other unexpected issues.


